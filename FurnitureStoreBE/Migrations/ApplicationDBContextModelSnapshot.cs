// <auto-generated />
using System;
using FurnitureStoreBE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FurnitureStoreBE.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FurnitureStoreBE.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpecificAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.AspNetTypeClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AspNetTypeClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ManageUser"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ManageBrand"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ManageCategory"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ManageColor"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ManageCoupon"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ManageCustomer"
                        },
                        new
                        {
                            Id = 7,
                            Name = "ManageDesigner"
                        },
                        new
                        {
                            Id = 8,
                            Name = "ManageFurnitureType"
                        },
                        new
                        {
                            Id = 9,
                            Name = "ManageMaterial"
                        },
                        new
                        {
                            Id = 10,
                            Name = "ManageMaterialType"
                        },
                        new
                        {
                            Id = 11,
                            Name = "ManageNotification"
                        },
                        new
                        {
                            Id = 12,
                            Name = "ManageRole"
                        },
                        new
                        {
                            Id = 13,
                            Name = "ManageOrder"
                        },
                        new
                        {
                            Id = 14,
                            Name = "ManageProduct"
                        },
                        new
                        {
                            Id = 15,
                            Name = "ManageQuestion"
                        },
                        new
                        {
                            Id = 16,
                            Name = "ManageReply"
                        },
                        new
                        {
                            Id = 17,
                            Name = "ManageReview"
                        },
                        new
                        {
                            Id = 18,
                            Name = "ManageRoomSpace"
                        },
                        new
                        {
                            Id = 19,
                            Name = "ManageReport"
                        });
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CloudinaryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OrderStatusId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProductVariantId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ReviewId")
                        .HasColumnType("uuid");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("ProductVariantId");

                    b.HasIndex("ReviewId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("FurnitureTypeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.HasIndex("FurnitureTypeId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Color", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ColorCode")
                        .HasColumnType("text");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ECouponStatus")
                        .HasColumnType("integer");

                    b.Property<int>("ECouponType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("MinOrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("UsageCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Coupon");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Designer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DesignerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.ToTable("Designer");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Favorite", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Favorite");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.FurnitureType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FurnitureTypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RoomSpaceId")
                        .HasColumnType("uuid");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.HasIndex("RoomSpaceId");

                    b.ToTable("FurnitureType");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.ImportInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ImportInvoice");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.ImportItem", b =>
                {
                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ImportInvoiceId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductVariantId", "ImportInvoiceId");

                    b.HasIndex("ImportInvoiceId");

                    b.ToTable("ImportItem");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.ToTable("Material");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ENotificationType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Read")
                        .HasColumnType("boolean");

                    b.Property<string>("RedirectUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AccountsReceivable")
                        .HasColumnType("numeric");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CanceledAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CouponId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ColorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Dimension")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ColorId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<string>("ShipperId")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BrandId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("MaxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RatingCount")
                        .HasColumnType("integer");

                    b.Property<float>("RatingValue")
                        .HasColumnType("real");

                    b.Property<long>("Sold")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.ProductVariant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ColorId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayDimension")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariant");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Reply", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ReviewId")
                        .HasColumnType("uuid");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("Reply");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Rate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.RoomSpace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("RoomSpaceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.ToTable("RoomSpace");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.UserUsedCoupon", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<Guid>("CouponId")
                        .HasColumnType("uuid");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "CouponId");

                    b.HasIndex("CouponId");

                    b.ToTable("UserUsedCoupon");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Owner",
                            NormalizedName = "OWNER"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Staff",
                            NormalizedName = "STAFF"
                        },
                        new
                        {
                            Id = "3",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("character varying(34)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasDiscriminator().HasValue("IdentityRoleClaim<string>");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductDesigner", b =>
                {
                    b.Property<Guid>("DesignerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("DesignerId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDesigner");
                });

            modelBuilder.Entity("ProductMaterial", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("MaterialId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductMaterial");
                });

            modelBuilder.Entity("UserNotification", b =>
                {
                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("NotificationId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotification");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.AspNetRoleClaims<string>", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>");

                    b.Property<int?>("AspNetTypeClaimsId")
                        .HasColumnType("integer");

                    b.HasIndex("AspNetTypeClaimsId");

                    b.HasDiscriminator().HasValue("AspNetRoleClaims<string>");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "CreateUser",
                            ClaimValue = "CreateUser",
                            RoleId = "1",
                            AspNetTypeClaimsId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "UpdateUser",
                            ClaimValue = "UpdateUser",
                            RoleId = "1",
                            AspNetTypeClaimsId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "DeleteUser",
                            ClaimValue = "DeleteUser",
                            RoleId = "1",
                            AspNetTypeClaimsId = 1
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "CreateBrand",
                            ClaimValue = "CreateBrand",
                            RoleId = "1",
                            AspNetTypeClaimsId = 2
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "UpdateBrand",
                            ClaimValue = "UpdateBrand",
                            RoleId = "1",
                            AspNetTypeClaimsId = 2
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "DeleteBrand",
                            ClaimValue = "DeleteBrand",
                            RoleId = "1",
                            AspNetTypeClaimsId = 2
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "CreateCategory",
                            ClaimValue = "CreateCategory",
                            RoleId = "1",
                            AspNetTypeClaimsId = 3
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "UpdateCategory",
                            ClaimValue = "UpdateCategory",
                            RoleId = "1",
                            AspNetTypeClaimsId = 3
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "DeleteCategory",
                            ClaimValue = "DeleteCategory",
                            RoleId = "1",
                            AspNetTypeClaimsId = 3
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "CreateColor",
                            ClaimValue = "CreateColor",
                            RoleId = "1",
                            AspNetTypeClaimsId = 4
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "UpdateColor",
                            ClaimValue = "UpdateColor",
                            RoleId = "1",
                            AspNetTypeClaimsId = 4
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "DeleteColor",
                            ClaimValue = "DeleteColor",
                            RoleId = "1",
                            AspNetTypeClaimsId = 4
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "CreateCoupon",
                            ClaimValue = "CreateCoupon",
                            RoleId = "1",
                            AspNetTypeClaimsId = 5
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "UpdateCoupon",
                            ClaimValue = "UpdateCoupon",
                            RoleId = "1",
                            AspNetTypeClaimsId = 5
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "DeleteCoupon",
                            ClaimValue = "DeleteCoupon",
                            RoleId = "1",
                            AspNetTypeClaimsId = 5
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "CreateCustomer",
                            ClaimValue = "CreateCustomer",
                            RoleId = "1",
                            AspNetTypeClaimsId = 6
                        },
                        new
                        {
                            Id = 17,
                            ClaimType = "UpdateCustomer",
                            ClaimValue = "UpdateCustomer",
                            RoleId = "1",
                            AspNetTypeClaimsId = 6
                        },
                        new
                        {
                            Id = 18,
                            ClaimType = "DeleteCustomer",
                            ClaimValue = "DeleteCustomer",
                            RoleId = "1",
                            AspNetTypeClaimsId = 6
                        },
                        new
                        {
                            Id = 19,
                            ClaimType = "CreateDesigner",
                            ClaimValue = "CreateDesigner",
                            RoleId = "1",
                            AspNetTypeClaimsId = 7
                        },
                        new
                        {
                            Id = 20,
                            ClaimType = "UpdateDesigner",
                            ClaimValue = "UpdateDesigner",
                            RoleId = "1",
                            AspNetTypeClaimsId = 7
                        },
                        new
                        {
                            Id = 21,
                            ClaimType = "DeleteDesigner",
                            ClaimValue = "DeleteDesigner",
                            RoleId = "1",
                            AspNetTypeClaimsId = 7
                        },
                        new
                        {
                            Id = 22,
                            ClaimType = "CreateFurnitureType",
                            ClaimValue = "CreateFurnitureType",
                            RoleId = "1",
                            AspNetTypeClaimsId = 8
                        },
                        new
                        {
                            Id = 23,
                            ClaimType = "UpdateFurnitureType",
                            ClaimValue = "UpdateFurnitureType",
                            RoleId = "1",
                            AspNetTypeClaimsId = 8
                        },
                        new
                        {
                            Id = 24,
                            ClaimType = "DeleteFurnitureType",
                            ClaimValue = "DeleteFurnitureType",
                            RoleId = "1",
                            AspNetTypeClaimsId = 8
                        },
                        new
                        {
                            Id = 25,
                            ClaimType = "CreateMaterial",
                            ClaimValue = "CreateMaterial",
                            RoleId = "1",
                            AspNetTypeClaimsId = 9
                        },
                        new
                        {
                            Id = 26,
                            ClaimType = "UpdateMaterial",
                            ClaimValue = "UpdateMaterial",
                            RoleId = "1",
                            AspNetTypeClaimsId = 9
                        },
                        new
                        {
                            Id = 27,
                            ClaimType = "DeleteMaterial",
                            ClaimValue = "DeleteMaterial",
                            RoleId = "1",
                            AspNetTypeClaimsId = 9
                        },
                        new
                        {
                            Id = 28,
                            ClaimType = "CreateMaterialType",
                            ClaimValue = "CreateMaterialType",
                            RoleId = "1",
                            AspNetTypeClaimsId = 10
                        },
                        new
                        {
                            Id = 29,
                            ClaimType = "UpdateMaterialType",
                            ClaimValue = "UpdateMaterialType",
                            RoleId = "1",
                            AspNetTypeClaimsId = 10
                        },
                        new
                        {
                            Id = 30,
                            ClaimType = "DeleteMaterialType",
                            ClaimValue = "DeleteMaterialType",
                            RoleId = "1",
                            AspNetTypeClaimsId = 10
                        },
                        new
                        {
                            Id = 31,
                            ClaimType = "CreateNotification",
                            ClaimValue = "CreateNotification",
                            RoleId = "1",
                            AspNetTypeClaimsId = 11
                        },
                        new
                        {
                            Id = 32,
                            ClaimType = "UpdateNotification",
                            ClaimValue = "UpdateNotification",
                            RoleId = "1",
                            AspNetTypeClaimsId = 11
                        },
                        new
                        {
                            Id = 33,
                            ClaimType = "DeleteNotification",
                            ClaimValue = "DeleteNotification",
                            RoleId = "1",
                            AspNetTypeClaimsId = 11
                        },
                        new
                        {
                            Id = 34,
                            ClaimType = "CreateRole",
                            ClaimValue = "CreateRole",
                            RoleId = "1",
                            AspNetTypeClaimsId = 12
                        },
                        new
                        {
                            Id = 35,
                            ClaimType = "UpdateRole",
                            ClaimValue = "UpdateRole",
                            RoleId = "1",
                            AspNetTypeClaimsId = 12
                        },
                        new
                        {
                            Id = 36,
                            ClaimType = "DeleteRole",
                            ClaimValue = "DeleteRole",
                            RoleId = "1",
                            AspNetTypeClaimsId = 12
                        },
                        new
                        {
                            Id = 37,
                            ClaimType = "CreateOrder",
                            ClaimValue = "CreateOrder",
                            RoleId = "1",
                            AspNetTypeClaimsId = 13
                        },
                        new
                        {
                            Id = 38,
                            ClaimType = "UpdateOrder",
                            ClaimValue = "UpdateOrder",
                            RoleId = "1",
                            AspNetTypeClaimsId = 13
                        },
                        new
                        {
                            Id = 39,
                            ClaimType = "DeleteOrder",
                            ClaimValue = "DeleteOrder",
                            RoleId = "1",
                            AspNetTypeClaimsId = 13
                        },
                        new
                        {
                            Id = 40,
                            ClaimType = "CreateProduct",
                            ClaimValue = "CreateProduct",
                            RoleId = "1",
                            AspNetTypeClaimsId = 14
                        },
                        new
                        {
                            Id = 41,
                            ClaimType = "UpdateProduct",
                            ClaimValue = "UpdateProduct",
                            RoleId = "1",
                            AspNetTypeClaimsId = 14
                        },
                        new
                        {
                            Id = 42,
                            ClaimType = "DeleteProduct",
                            ClaimValue = "DeleteProduct",
                            RoleId = "1",
                            AspNetTypeClaimsId = 14
                        },
                        new
                        {
                            Id = 43,
                            ClaimType = "CreateQuestion",
                            ClaimValue = "CreateQuestion",
                            RoleId = "1",
                            AspNetTypeClaimsId = 15
                        },
                        new
                        {
                            Id = 44,
                            ClaimType = "UpdateQuestion",
                            ClaimValue = "UpdateQuestion",
                            RoleId = "1",
                            AspNetTypeClaimsId = 15
                        },
                        new
                        {
                            Id = 45,
                            ClaimType = "DeleteQuestion",
                            ClaimValue = "DeleteQuestion",
                            RoleId = "1",
                            AspNetTypeClaimsId = 15
                        },
                        new
                        {
                            Id = 46,
                            ClaimType = "CreateReply",
                            ClaimValue = "CreateReply",
                            RoleId = "1",
                            AspNetTypeClaimsId = 16
                        },
                        new
                        {
                            Id = 47,
                            ClaimType = "UpdateReply",
                            ClaimValue = "UpdateReply",
                            RoleId = "1",
                            AspNetTypeClaimsId = 16
                        },
                        new
                        {
                            Id = 48,
                            ClaimType = "DeleteReply",
                            ClaimValue = "DeleteReply",
                            RoleId = "1",
                            AspNetTypeClaimsId = 16
                        },
                        new
                        {
                            Id = 49,
                            ClaimType = "CreateReview",
                            ClaimValue = "CreateReview",
                            RoleId = "1",
                            AspNetTypeClaimsId = 17
                        },
                        new
                        {
                            Id = 50,
                            ClaimType = "UpdateReview",
                            ClaimValue = "UpdateReview",
                            RoleId = "1",
                            AspNetTypeClaimsId = 17
                        },
                        new
                        {
                            Id = 51,
                            ClaimType = "DeleteReview",
                            ClaimValue = "DeleteReview",
                            RoleId = "1",
                            AspNetTypeClaimsId = 17
                        },
                        new
                        {
                            Id = 52,
                            ClaimType = "CreateRoomSpace",
                            ClaimValue = "CreateRoomSpace",
                            RoleId = "1",
                            AspNetTypeClaimsId = 18
                        },
                        new
                        {
                            Id = 53,
                            ClaimType = "UpdateRoomSpace",
                            ClaimValue = "UpdateRoomSpace",
                            RoleId = "1",
                            AspNetTypeClaimsId = 18
                        },
                        new
                        {
                            Id = 54,
                            ClaimType = "DeleteRoomSpace",
                            ClaimValue = "DeleteRoomSpace",
                            RoleId = "1",
                            AspNetTypeClaimsId = 18
                        },
                        new
                        {
                            Id = 55,
                            ClaimType = "CreateReport",
                            ClaimValue = "CreateReport",
                            RoleId = "1",
                            AspNetTypeClaimsId = 19
                        },
                        new
                        {
                            Id = 56,
                            ClaimType = "CreateUser",
                            ClaimValue = "CreateUser",
                            RoleId = "2",
                            AspNetTypeClaimsId = 1
                        },
                        new
                        {
                            Id = 57,
                            ClaimType = "UpdateUser",
                            ClaimValue = "UpdateUser",
                            RoleId = "2",
                            AspNetTypeClaimsId = 1
                        },
                        new
                        {
                            Id = 58,
                            ClaimType = "DeleteUser",
                            ClaimValue = "DeleteUser",
                            RoleId = "2",
                            AspNetTypeClaimsId = 1
                        },
                        new
                        {
                            Id = 59,
                            ClaimType = "CreateBrand",
                            ClaimValue = "CreateBrand",
                            RoleId = "2",
                            AspNetTypeClaimsId = 2
                        },
                        new
                        {
                            Id = 60,
                            ClaimType = "UpdateBrand",
                            ClaimValue = "UpdateBrand",
                            RoleId = "2",
                            AspNetTypeClaimsId = 2
                        },
                        new
                        {
                            Id = 61,
                            ClaimType = "DeleteBrand",
                            ClaimValue = "DeleteBrand",
                            RoleId = "2",
                            AspNetTypeClaimsId = 2
                        },
                        new
                        {
                            Id = 62,
                            ClaimType = "CreateCategory",
                            ClaimValue = "CreateCategory",
                            RoleId = "2",
                            AspNetTypeClaimsId = 3
                        },
                        new
                        {
                            Id = 63,
                            ClaimType = "UpdateCategory",
                            ClaimValue = "UpdateCategory",
                            RoleId = "2",
                            AspNetTypeClaimsId = 3
                        },
                        new
                        {
                            Id = 64,
                            ClaimType = "DeleteCategory",
                            ClaimValue = "DeleteCategory",
                            RoleId = "2",
                            AspNetTypeClaimsId = 3
                        },
                        new
                        {
                            Id = 65,
                            ClaimType = "CreateColor",
                            ClaimValue = "CreateColor",
                            RoleId = "2",
                            AspNetTypeClaimsId = 4
                        },
                        new
                        {
                            Id = 66,
                            ClaimType = "UpdateColor",
                            ClaimValue = "UpdateColor",
                            RoleId = "2",
                            AspNetTypeClaimsId = 4
                        },
                        new
                        {
                            Id = 67,
                            ClaimType = "DeleteColor",
                            ClaimValue = "DeleteColor",
                            RoleId = "2",
                            AspNetTypeClaimsId = 4
                        },
                        new
                        {
                            Id = 68,
                            ClaimType = "CreateCoupon",
                            ClaimValue = "CreateCoupon",
                            RoleId = "2",
                            AspNetTypeClaimsId = 5
                        },
                        new
                        {
                            Id = 69,
                            ClaimType = "UpdateCoupon",
                            ClaimValue = "UpdateCoupon",
                            RoleId = "2",
                            AspNetTypeClaimsId = 5
                        },
                        new
                        {
                            Id = 70,
                            ClaimType = "DeleteCoupon",
                            ClaimValue = "DeleteCoupon",
                            RoleId = "2",
                            AspNetTypeClaimsId = 5
                        },
                        new
                        {
                            Id = 71,
                            ClaimType = "CreateCustomer",
                            ClaimValue = "CreateCustomer",
                            RoleId = "2",
                            AspNetTypeClaimsId = 6
                        },
                        new
                        {
                            Id = 72,
                            ClaimType = "UpdateCustomer",
                            ClaimValue = "UpdateCustomer",
                            RoleId = "2",
                            AspNetTypeClaimsId = 6
                        },
                        new
                        {
                            Id = 73,
                            ClaimType = "DeleteCustomer",
                            ClaimValue = "DeleteCustomer",
                            RoleId = "2",
                            AspNetTypeClaimsId = 6
                        },
                        new
                        {
                            Id = 74,
                            ClaimType = "CreateDesigner",
                            ClaimValue = "CreateDesigner",
                            RoleId = "2",
                            AspNetTypeClaimsId = 7
                        },
                        new
                        {
                            Id = 75,
                            ClaimType = "UpdateDesigner",
                            ClaimValue = "UpdateDesigner",
                            RoleId = "2",
                            AspNetTypeClaimsId = 7
                        },
                        new
                        {
                            Id = 76,
                            ClaimType = "DeleteDesigner",
                            ClaimValue = "DeleteDesigner",
                            RoleId = "2",
                            AspNetTypeClaimsId = 7
                        },
                        new
                        {
                            Id = 77,
                            ClaimType = "CreateFurnitureType",
                            ClaimValue = "CreateFurnitureType",
                            RoleId = "2",
                            AspNetTypeClaimsId = 8
                        },
                        new
                        {
                            Id = 78,
                            ClaimType = "UpdateFurnitureType",
                            ClaimValue = "UpdateFurnitureType",
                            RoleId = "2",
                            AspNetTypeClaimsId = 8
                        },
                        new
                        {
                            Id = 79,
                            ClaimType = "DeleteFurnitureType",
                            ClaimValue = "DeleteFurnitureType",
                            RoleId = "2",
                            AspNetTypeClaimsId = 8
                        },
                        new
                        {
                            Id = 80,
                            ClaimType = "CreateMaterial",
                            ClaimValue = "CreateMaterial",
                            RoleId = "2",
                            AspNetTypeClaimsId = 9
                        },
                        new
                        {
                            Id = 81,
                            ClaimType = "UpdateMaterial",
                            ClaimValue = "UpdateMaterial",
                            RoleId = "2",
                            AspNetTypeClaimsId = 9
                        },
                        new
                        {
                            Id = 82,
                            ClaimType = "DeleteMaterial",
                            ClaimValue = "DeleteMaterial",
                            RoleId = "2",
                            AspNetTypeClaimsId = 9
                        },
                        new
                        {
                            Id = 83,
                            ClaimType = "CreateMaterialType",
                            ClaimValue = "CreateMaterialType",
                            RoleId = "2",
                            AspNetTypeClaimsId = 10
                        },
                        new
                        {
                            Id = 84,
                            ClaimType = "UpdateMaterialType",
                            ClaimValue = "UpdateMaterialType",
                            RoleId = "2",
                            AspNetTypeClaimsId = 10
                        },
                        new
                        {
                            Id = 85,
                            ClaimType = "DeleteMaterialType",
                            ClaimValue = "DeleteMaterialType",
                            RoleId = "2",
                            AspNetTypeClaimsId = 10
                        },
                        new
                        {
                            Id = 86,
                            ClaimType = "CreateNotification",
                            ClaimValue = "CreateNotification",
                            RoleId = "2",
                            AspNetTypeClaimsId = 11
                        },
                        new
                        {
                            Id = 87,
                            ClaimType = "UpdateNotification",
                            ClaimValue = "UpdateNotification",
                            RoleId = "2",
                            AspNetTypeClaimsId = 11
                        },
                        new
                        {
                            Id = 88,
                            ClaimType = "DeleteNotification",
                            ClaimValue = "DeleteNotification",
                            RoleId = "2",
                            AspNetTypeClaimsId = 11
                        },
                        new
                        {
                            Id = 89,
                            ClaimType = "CreateRole",
                            ClaimValue = "CreateRole",
                            RoleId = "2",
                            AspNetTypeClaimsId = 12
                        },
                        new
                        {
                            Id = 90,
                            ClaimType = "UpdateRole",
                            ClaimValue = "UpdateRole",
                            RoleId = "2",
                            AspNetTypeClaimsId = 12
                        },
                        new
                        {
                            Id = 91,
                            ClaimType = "DeleteRole",
                            ClaimValue = "DeleteRole",
                            RoleId = "2",
                            AspNetTypeClaimsId = 12
                        },
                        new
                        {
                            Id = 92,
                            ClaimType = "CreateOrder",
                            ClaimValue = "CreateOrder",
                            RoleId = "2",
                            AspNetTypeClaimsId = 13
                        },
                        new
                        {
                            Id = 93,
                            ClaimType = "UpdateOrder",
                            ClaimValue = "UpdateOrder",
                            RoleId = "2",
                            AspNetTypeClaimsId = 13
                        },
                        new
                        {
                            Id = 94,
                            ClaimType = "DeleteOrder",
                            ClaimValue = "DeleteOrder",
                            RoleId = "2",
                            AspNetTypeClaimsId = 13
                        },
                        new
                        {
                            Id = 95,
                            ClaimType = "CreateProduct",
                            ClaimValue = "CreateProduct",
                            RoleId = "2",
                            AspNetTypeClaimsId = 14
                        },
                        new
                        {
                            Id = 96,
                            ClaimType = "UpdateProduct",
                            ClaimValue = "UpdateProduct",
                            RoleId = "2",
                            AspNetTypeClaimsId = 14
                        },
                        new
                        {
                            Id = 97,
                            ClaimType = "DeleteProduct",
                            ClaimValue = "DeleteProduct",
                            RoleId = "2",
                            AspNetTypeClaimsId = 14
                        },
                        new
                        {
                            Id = 98,
                            ClaimType = "CreateQuestion",
                            ClaimValue = "CreateQuestion",
                            RoleId = "2",
                            AspNetTypeClaimsId = 15
                        },
                        new
                        {
                            Id = 99,
                            ClaimType = "UpdateQuestion",
                            ClaimValue = "UpdateQuestion",
                            RoleId = "2",
                            AspNetTypeClaimsId = 15
                        },
                        new
                        {
                            Id = 100,
                            ClaimType = "DeleteQuestion",
                            ClaimValue = "DeleteQuestion",
                            RoleId = "2",
                            AspNetTypeClaimsId = 15
                        },
                        new
                        {
                            Id = 101,
                            ClaimType = "CreateReply",
                            ClaimValue = "CreateReply",
                            RoleId = "2",
                            AspNetTypeClaimsId = 16
                        },
                        new
                        {
                            Id = 102,
                            ClaimType = "UpdateReply",
                            ClaimValue = "UpdateReply",
                            RoleId = "2",
                            AspNetTypeClaimsId = 16
                        },
                        new
                        {
                            Id = 103,
                            ClaimType = "DeleteReply",
                            ClaimValue = "DeleteReply",
                            RoleId = "2",
                            AspNetTypeClaimsId = 16
                        },
                        new
                        {
                            Id = 104,
                            ClaimType = "CreateReview",
                            ClaimValue = "CreateReview",
                            RoleId = "2",
                            AspNetTypeClaimsId = 17
                        },
                        new
                        {
                            Id = 105,
                            ClaimType = "UpdateReview",
                            ClaimValue = "UpdateReview",
                            RoleId = "2",
                            AspNetTypeClaimsId = 17
                        },
                        new
                        {
                            Id = 106,
                            ClaimType = "DeleteReview",
                            ClaimValue = "DeleteReview",
                            RoleId = "2",
                            AspNetTypeClaimsId = 17
                        },
                        new
                        {
                            Id = 107,
                            ClaimType = "CreateRoomSpace",
                            ClaimValue = "CreateRoomSpace",
                            RoleId = "2",
                            AspNetTypeClaimsId = 18
                        },
                        new
                        {
                            Id = 108,
                            ClaimType = "UpdateRoomSpace",
                            ClaimValue = "UpdateRoomSpace",
                            RoleId = "2",
                            AspNetTypeClaimsId = 18
                        },
                        new
                        {
                            Id = 109,
                            ClaimType = "DeleteRoomSpace",
                            ClaimValue = "DeleteRoomSpace",
                            RoleId = "2",
                            AspNetTypeClaimsId = 18
                        },
                        new
                        {
                            Id = 110,
                            ClaimType = "CreateReport",
                            ClaimValue = "CreateReport",
                            RoleId = "2",
                            AspNetTypeClaimsId = 19
                        },
                        new
                        {
                            Id = 111,
                            ClaimType = "CreateOrder",
                            ClaimValue = "CreateOrder",
                            RoleId = "3",
                            AspNetTypeClaimsId = 13
                        },
                        new
                        {
                            Id = 112,
                            ClaimType = "UpdateOrder",
                            ClaimValue = "UpdateOrder",
                            RoleId = "3",
                            AspNetTypeClaimsId = 13
                        },
                        new
                        {
                            Id = 113,
                            ClaimType = "DeleteOrder",
                            ClaimValue = "DeleteOrder",
                            RoleId = "3",
                            AspNetTypeClaimsId = 13
                        },
                        new
                        {
                            Id = 114,
                            ClaimType = "CreateQuestion",
                            ClaimValue = "CreateQuestion",
                            RoleId = "3",
                            AspNetTypeClaimsId = 15
                        },
                        new
                        {
                            Id = 115,
                            ClaimType = "UpdateQuestion",
                            ClaimValue = "UpdateQuestion",
                            RoleId = "3",
                            AspNetTypeClaimsId = 15
                        },
                        new
                        {
                            Id = 116,
                            ClaimType = "DeleteQuestion",
                            ClaimValue = "DeleteQuestion",
                            RoleId = "3",
                            AspNetTypeClaimsId = 15
                        },
                        new
                        {
                            Id = 117,
                            ClaimType = "CreateReply",
                            ClaimValue = "CreateReply",
                            RoleId = "3",
                            AspNetTypeClaimsId = 16
                        },
                        new
                        {
                            Id = 118,
                            ClaimType = "UpdateReply",
                            ClaimValue = "UpdateReply",
                            RoleId = "3",
                            AspNetTypeClaimsId = 16
                        },
                        new
                        {
                            Id = 119,
                            ClaimType = "DeleteReply",
                            ClaimValue = "DeleteReply",
                            RoleId = "3",
                            AspNetTypeClaimsId = 16
                        },
                        new
                        {
                            Id = 120,
                            ClaimType = "CreateReview",
                            ClaimValue = "CreateReview",
                            RoleId = "3",
                            AspNetTypeClaimsId = 17
                        },
                        new
                        {
                            Id = 121,
                            ClaimType = "UpdateReview",
                            ClaimValue = "UpdateReview",
                            RoleId = "3",
                            AspNetTypeClaimsId = 17
                        },
                        new
                        {
                            Id = 122,
                            ClaimType = "DeleteReview",
                            ClaimValue = "DeleteReview",
                            RoleId = "3",
                            AspNetTypeClaimsId = 17
                        });
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Address", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Asset", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.OrderStatus", null)
                        .WithMany("Asset")
                        .HasForeignKey("OrderStatusId");

                    b.HasOne("FurnitureStoreBE.Models.ProductVariant", "ProductVariant")
                        .WithMany("Assets")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FurnitureStoreBE.Models.Review", "Review")
                        .WithMany("Asset")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ProductVariant");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Brand", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Asset", "Asset")
                        .WithOne("Brand")
                        .HasForeignKey("FurnitureStoreBE.Models.Brand", "AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Cart", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("FurnitureStoreBE.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Category", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Asset", "Asset")
                        .WithOne("Category")
                        .HasForeignKey("FurnitureStoreBE.Models.Category", "AssetId");

                    b.HasOne("FurnitureStoreBE.Models.FurnitureType", "FurnitureType")
                        .WithMany("Categories")
                        .HasForeignKey("FurnitureTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("FurnitureType");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Coupon", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Asset", "Asset")
                        .WithOne("Coupon")
                        .HasForeignKey("FurnitureStoreBE.Models.Coupon", "AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Designer", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Asset", "Asset")
                        .WithOne("Designer")
                        .HasForeignKey("FurnitureStoreBE.Models.Designer", "AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Favorite", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.FurnitureType", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Asset", "Asset")
                        .WithOne("FurnitureType")
                        .HasForeignKey("FurnitureStoreBE.Models.FurnitureType", "AssetId");

                    b.HasOne("FurnitureStoreBE.Models.RoomSpace", "RoomSpace")
                        .WithMany("FurnitureTypes")
                        .HasForeignKey("RoomSpaceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("RoomSpace");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.ImportItem", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.ImportInvoice", "ImportInvoice")
                        .WithMany("ImportItem")
                        .HasForeignKey("ImportInvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.ProductVariant", "ProductVariant")
                        .WithMany("ImportItem")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ImportInvoice");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Material", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Asset", "Asset")
                        .WithOne("Material")
                        .HasForeignKey("FurnitureStoreBE.Models.Material", "AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Order", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Address", "Address")
                        .WithMany("Orders")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.Coupon", "Coupon")
                        .WithMany("Orders")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Coupon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.OrderItem", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Cart", "Cart")
                        .WithMany("OrderItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FurnitureStoreBE.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FurnitureStoreBE.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithMany("OrderItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Color");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.OrderStatus", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Order", "Order")
                        .WithMany("OrderStatuses")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Product", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Asset", "Asset")
                        .WithOne("Product")
                        .HasForeignKey("FurnitureStoreBE.Models.Product", "AssetId");

                    b.HasOne("FurnitureStoreBE.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FurnitureStoreBE.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Asset");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.ProductVariant", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Color", "Color")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.Product", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Question", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Product", "Product")
                        .WithMany("Questions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithMany("Question")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.RefreshToken", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Reply", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Question", "Question")
                        .WithMany("Reply")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FurnitureStoreBE.Models.Review", "Review")
                        .WithMany("Reply")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithMany("Reply")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Review", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.RoomSpace", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Asset", "Asset")
                        .WithOne("RoomSpace")
                        .HasForeignKey("FurnitureStoreBE.Models.RoomSpace", "AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.User", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Asset", "Asset")
                        .WithOne("User")
                        .HasForeignKey("FurnitureStoreBE.Models.User", "AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.UserUsedCoupon", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Coupon", "Coupon")
                        .WithMany("UserUsedCoupon")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.User", "User")
                        .WithMany("UserUsedCoupon")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductDesigner", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Designer", null)
                        .WithMany()
                        .HasForeignKey("DesignerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductMaterial", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("UserNotification", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.Notification", null)
                        .WithMany()
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FurnitureStoreBE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.AspNetRoleClaims<string>", b =>
                {
                    b.HasOne("FurnitureStoreBE.Models.AspNetTypeClaims", "AspNetTypeClaims")
                        .WithMany("RoleClaims")
                        .HasForeignKey("AspNetTypeClaimsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AspNetTypeClaims");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Address", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.AspNetTypeClaims", b =>
                {
                    b.Navigation("RoleClaims");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Asset", b =>
                {
                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Coupon");

                    b.Navigation("Designer");

                    b.Navigation("FurnitureType");

                    b.Navigation("Material");

                    b.Navigation("Product");

                    b.Navigation("RoomSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Cart", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Color", b =>
                {
                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Coupon", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("UserUsedCoupon");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.FurnitureType", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.ImportInvoice", b =>
                {
                    b.Navigation("ImportItem");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("OrderStatuses");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.OrderStatus", b =>
                {
                    b.Navigation("Asset");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Product", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductVariants");

                    b.Navigation("Questions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.ProductVariant", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("ImportItem");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Question", b =>
                {
                    b.Navigation("Reply");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.Review", b =>
                {
                    b.Navigation("Asset");

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.RoomSpace", b =>
                {
                    b.Navigation("FurnitureTypes");
                });

            modelBuilder.Entity("FurnitureStoreBE.Models.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Favorites");

                    b.Navigation("OrderItems");

                    b.Navigation("Orders");

                    b.Navigation("Question");

                    b.Navigation("Reply");

                    b.Navigation("Reviews");

                    b.Navigation("Tokens");

                    b.Navigation("UserUsedCoupon");
                });
#pragma warning restore 612, 618
        }
    }
}
